# Generated by Selenium IDE
import pytest
import time
import json
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.common.action_chains import ActionChains
from selenium.webdriver.support import expected_conditions
from selenium.webdriver.support.wait import WebDriverWait
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.common.desired_capabilities import DesiredCapabilities

class TestTC04Removefileatachment():
  def setup_method(self, method):
    self.driver = webdriver.Firefox()
    self.vars = {}
  
  def teardown_method(self, method):
    self.driver.quit()
  
  def test_tC04Removefileatachment(self, username, password):
    self.driver.get("https://localhost/moodle/")
    self.driver.find_element(By.LINK_TEXT, "Log in").click()
    self.driver.find_element(By.ID, "username").click()
    self.driver.find_element(By.ID, "username").clear()
    self.driver.find_element(By.ID, "username").send_keys(username)
    self.driver.find_element(By.ID, "password").click()
    self.driver.find_element(By.ID, "password").send_keys(password)
    self.driver.find_element(By.ID, "loginbtn").click()
    WebDriverWait(self.driver, 30).until(expected_conditions.visibility_of_element_located((By.XPATH, "//span[contains(.,\'Software Testing\')]")))
    self.driver.find_element(By.NAME, "setmode").click()
    WebDriverWait(self.driver, 30).until(expected_conditions.visibility_of_element_located((By.XPATH, "//span[contains(.,\'Software Testing\')]")))
    self.driver.find_element(By.XPATH, "//span[contains(.,\'Software Testing\')]").click()
    WebDriverWait(self.driver, 30).until(expected_conditions.visibility_of_element_located((By.XPATH, "//li[2]/div/div/div[2]/div/div/div/div/a")))
    time.sleep(3)
    self.driver.find_element(By.XPATH, "//li[2]/div/div/div[2]/div/div/div/div/a").click()
    WebDriverWait(self.driver, 30).until(expected_conditions.visibility_of_element_located((By.LINK_TEXT, "Edit settings")))
    time.sleep(3)
    self.driver.find_element(By.ID, "actionmenuaction-8").click()
    WebDriverWait(self.driver, 30).until(expected_conditions.presence_of_element_located((By.XPATH, "//div[2]/a/div/div[3]")))
    time.sleep(3)
    self.driver.find_element(By.XPATH, "//div[2]/a/div/div[3]").click()
    WebDriverWait(self.driver, 30).until(expected_conditions.presence_of_element_located((By.XPATH, "//form/div/button[2]")))
    self.driver.find_element(By.XPATH, "//form/div/button[2]").click()
    WebDriverWait(self.driver, 30).until(expected_conditions.presence_of_element_located((By.CSS_SELECTOR, ".userinitials")))
    WebDriverWait(self.driver, 30).until(expected_conditions.presence_of_element_located((By.XPATH, "//p[contains(.,\'Are you sure you want to delete this file?\')]")))
    self.driver.find_element(By.XPATH, "//div[9]/div[3]/div/div[2]/div/button").click()
    self.driver.find_element(By.ID, "id_submitbutton").click()
    time.sleep(3)
    # self.driver.find_element(By.LINK_TEXT, "Settings").click()
    self.driver.get("https://localhost/moodle/")
    WebDriverWait(self.driver, 30).until(expected_conditions.visibility_of_element_located((By.XPATH, "//span[contains(.,\'Software Testing\')]")))
    self.driver.find_element(By.XPATH, "//span[contains(.,\'Software Testing\')]").click()
    WebDriverWait(self.driver, 30).until(expected_conditions.visibility_of_element_located((By.XPATH, "//li[2]/div/div/div[2]/div/div/div/div/a")))
    time.sleep(3)
    self.driver.find_element(By.XPATH, "//li[2]/div/div/div[2]/div/div/div/div/a").click()
    WebDriverWait(self.driver, 30).until(expected_conditions.visibility_of_element_located((By.LINK_TEXT, "Edit settings")))
    time.sleep(3)
    self.driver.find_element(By.ID, "actionmenuaction-8").click()
    
    elements = self.driver.find_elements(By.XPATH, "//div[2]/a/div/div[3]")
    assert len(elements) == 0
    WebDriverWait(self.driver, 30).until(expected_conditions.presence_of_element_located((By.ID, "user-menu-toggle")))
    #log out
    time.sleep(3)
    self.driver.find_element(By.CSS_SELECTOR, ".userinitials").click()
    self.driver.find_element(By.LINK_TEXT, "Log out").click()
    elements = self.driver.find_elements(By.LINK_TEXT, "Log in")
    assert len(elements) > 0
  
if __name__ == '__main__':
  file1 = open("login_credentials.json")
  
  login = json.load(file1)
  
  testcase4 = TestTC04Removefileatachment()
  testcase4.setup_method(1)
  
  testcase4.test_tC04Removefileatachment(login["username"], login["password"])
  
  testcase4.teardown_method(1)